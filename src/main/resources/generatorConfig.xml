<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

	<!-- 指定数据库连接配置文件 -->
	<properties resource="jdbc.properties" />

	<!-- 指定JDBC驱动 -->
	<!-- <classPathEntry location="D:\repo\com\oracle\ojdbc14\10.2.0.1.0\ojdbc14-10.2.0.1.0.jar" 
		/> -->

	<!-- 如果希望不生成和Example查询有关的内容，那么可以配置 targetRuntime="MyBatis3Simple"，避免在后面的<table>中逐个进行配置 -->
	<!-- defaultModelType:这个属性定义了MBG如何生成实体类。 这个属性有以下可选值： -->
	<!-- conditional:这是默认值,这个模型和下面的hierarchical类似，除了如果那个单独的类将只包含一个字段，将不会生成一个单独的类。 
		因此,如果一个表的主键只有一个字段,那么不会为该字段生成单独的实体类,会将该字段合并到基本实体类中。 -->
	<!-- flat:该模型为每一张表只生成一个实体类。这个实体类包含表中的所有字段。这种模型最简单，推荐使用。 -->
	<!-- hierarchical:如果表有主键,那么该模型会产生一个单独的主键实体类,如果表还有BLOB字段， 则会为表生成一个包含所有BLOB字段的单独的实体类,然后为所有其他的字段生成一个单独的实体类。 
		MBG会在所有生成的实体类之间维护一个继承关系。 -->
	<context id="DB2Tables" targetRuntime="MyBatis3"
		defaultModelType="flat">

		<!-- 由于beginningDelimiter和endingDelimiter的默认值为双引号(")，在Mysql中不能这么写，所以还要将这两个默认值改为反单引号(`) -->
		<property name="beginningDelimiter" value="`" />
		<property name="endingDelimiter" value="`" />

		<!-- suppressAllComments:阻止生成注释，默认为false -->
		<!-- suppressDate:阻止生成的注释包含时间戳，默认为false -->
		<!-- 一般情况下由于MBG生成的注释信息没有任何价值，而且有时间戳的情况下每次生成的注释都不一样，使用版本控制的时候每次都会提交，因而一般情况下我们都会屏蔽注释信息 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" />
			<property name="suppressDate" value="true" />
		</commentGenerator>

		<!-- 配置数据库连接 -->
		<jdbcConnection driverClass="${datasource.driver-class-name}"
			connectionURL="${datasource.url}" userId="${datasource.username}"
			password="${datasource.password}" />

		<javaTypeResolver>
			<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL 
				和 NUMERIC 类型解析为java.math.BigDecimal -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<javaModelGenerator targetPackage="com.xiaodz.mybatis_generator_demo.model"
			targetProject="src/main/java">
			<property name="enableSubPackages" value="true" />
			<!-- trimStrings:是否对数据库查询结果进行trim操作，如果设置为true就会生成类似这样public void setUsername(String 
				username) {this.username = username == null ? null : username.trim();}的setter方法。默认值为false。 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<javaClientGenerator targetPackage="com.xiaodz.mybatis_generator_demo.dao"
			targetProject="src/main/java" type="XMLMAPPER">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!-- 例如要生成全部的表，可以按如下配置： -->
		<!-- <table tableName="%" /> -->

		<table tableName="area" domainObjectName="AreaInfo"
			enableSelectByExample="true" enableDeleteByExample="true"
			enableCountByExample="true" selectByExampleQueryId="true"
			enableUpdateByExample="true">
			<!-- <generatedKey column="id" sqlStatement="oracle" identity="true" /> -->
			<!-- <generatedKey column="id" sqlStatement="Mysql"/> -->
		</table>
		<table tableName="goods" domainObjectName="GoodsInfo"
			enableSelectByExample="false" enableDeleteByExample="false"
			enableCountByExample="false" selectByExampleQueryId="false"
			enableUpdateByExample="false">
		</table>
		<table tableName="orders" domainObjectName="Orders">
			<generatedKey column="id" sqlStatement="Mysql" />
		</table>
		<table tableName="order_detail" domainObjectName="OrderDetail">
		</table>
		<table tableName="user" domainObjectName="User">
		</table>
	</context>
</generatorConfiguration>  